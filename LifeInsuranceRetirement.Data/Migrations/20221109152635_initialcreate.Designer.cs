// <auto-generated />
using System;
using LifeInsuranceRetirement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LifeInsuranceRetirement.Data.Migrations
{
    [DbContext(typeof(LifeInsuranceRetirementDbContext))]
    [Migration("20221109152635_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Benefits", b =>
                {
                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("Multiple")
                        .HasColumnType("int");

                    b.HasKey("ConsumerId", "ConfigurationId", "Multiple")
                        .HasName("PK_Benefits");

                    b.HasIndex("ConfigurationId")
                        .HasDatabaseName("IX_Benefits_Configuration");

                    b.HasIndex("ConsumerId")
                        .HasDatabaseName("IX_Benefits_Consumer");

                    b.ToTable("Benefits", (string)null);
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GuaranteedIssue")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Increments")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MaxAgeLimit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MaxRange")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MinAgeLimit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MinRange")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Benefits", b =>
                {
                    b.HasOne("LifeInsuranceRetirement.Core.Configuration", "Configuration")
                        .WithMany("Benefits")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefits_Configuration");

                    b.HasOne("LifeInsuranceRetirement.Core.Consumer", "Consumer")
                        .WithMany("Benefits")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefits_Consumer");

                    b.Navigation("Configuration");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Configuration", b =>
                {
                    b.Navigation("Benefits");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Consumer", b =>
                {
                    b.Navigation("Benefits");
                });
#pragma warning restore 612, 618
        }
    }
}
