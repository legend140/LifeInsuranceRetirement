// <auto-generated />
using System;
using LifeInsuranceRetirement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LifeInsuranceRetirement.Data.Migrations
{
    [DbContext(typeof(LifeInsuranceRetirementDbContext))]
    [Migration("20221116112739_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDT")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId")
                        .HasDatabaseName("IX_Benefit_Configuration");

                    b.HasIndex("ConsumerId")
                        .HasDatabaseName("IX_Benefit_Consumer");

                    b.ToTable("Benefits", (string)null);
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.BenefitDetail", b =>
                {
                    b.Property<int>("Multiple")
                        .HasColumnType("int");

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.Property<int>("BenefitsAmountQuotation")
                        .HasColumnType("int");

                    b.Property<int>("PendedAmount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Multiple", "BenefitId")
                        .HasName("PK_BenefitDetail");

                    b.HasIndex("BenefitId")
                        .HasDatabaseName("IX_Benefit_BenefitDetail");

                    b.ToTable("BenefitDetails", (string)null);
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuaranteedIssue")
                        .HasColumnType("int");

                    b.Property<int>("Increments")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MaxRange")
                        .HasColumnType("int");

                    b.Property<int>("MinAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MinRange")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDT")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.ConfigurationLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("GuaranteedIssue")
                        .HasColumnType("int");

                    b.Property<int>("Increments")
                        .HasColumnType("int");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("LoggedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoggedDT")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MaxRange")
                        .HasColumnType("int");

                    b.Property<int>("MinAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MinRange")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationLogs");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDT")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BenefitId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.ConsumerLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("LoggedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoggedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BenefitId");

                    b.ToTable("ConsumerLogs");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Benefit", b =>
                {
                    b.HasOne("LifeInsuranceRetirement.Core.Configuration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefit_Configuration");

                    b.HasOne("LifeInsuranceRetirement.Core.Consumer", "Consumer")
                        .WithMany("Benefits")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefit_Consumer");

                    b.Navigation("Configuration");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.BenefitDetail", b =>
                {
                    b.HasOne("LifeInsuranceRetirement.Core.Benefit", "Benefit")
                        .WithMany("BenefitDetails")
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefit_Detail");

                    b.Navigation("Benefit");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Consumer", b =>
                {
                    b.HasOne("LifeInsuranceRetirement.Core.Benefit", "Benefit")
                        .WithMany()
                        .HasForeignKey("BenefitId");

                    b.Navigation("Benefit");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.ConsumerLogs", b =>
                {
                    b.HasOne("LifeInsuranceRetirement.Core.Benefit", "Benefit")
                        .WithMany("ConsumerLogs")
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Benefit_ConsumerLogs");

                    b.Navigation("Benefit");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Benefit", b =>
                {
                    b.Navigation("BenefitDetails");

                    b.Navigation("ConsumerLogs");
                });

            modelBuilder.Entity("LifeInsuranceRetirement.Core.Consumer", b =>
                {
                    b.Navigation("Benefits");
                });
#pragma warning restore 612, 618
        }
    }
}
